# Watchlink Networks Generator Portal - AWS Environment Configuration
# Copy this file to .env and update with your actual values

# ================================================================
# DATABASE CONFIGURATION (AWS RDS)
# ================================================================
# Replace with your RDS PostgreSQL connection string
# Format: postgresql://username:password@rds-endpoint:5432/database_name
DATABASE_URL=postgresql://username:password@your-rds-endpoint.region.rds.amazonaws.com:5432/watchlink_db

# Individual database connection parameters (alternative to DATABASE_URL)
PGHOST=your-rds-endpoint.region.rds.amazonaws.com
PGPORT=5432
PGUSER=your-database-username
PGPASSWORD=your-database-password
PGDATABASE=watchlink_db

# ================================================================
# APPLICATION CONFIGURATION
# ================================================================
# Environment (production for AWS deployment)
NODE_ENV=production

# Session secret (generate a strong random string)
# Use: openssl rand -base64 32
SESSION_SECRET=your-very-long-random-session-secret-here-change-this

# Application port (default: 5000)
PORT=5000

# ================================================================
# AUTHENTICATION CONFIGURATION
# ================================================================
# Google Workspace OAuth (if using Google SSO)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=https://your-domain.com/auth/google/callback

# ================================================================
# AWS SPECIFIC CONFIGURATION
# ================================================================
# AWS Region where your resources are deployed
AWS_REGION=us-east-1

# Application domain (for CORS and redirects)
APP_DOMAIN=https://your-domain.com

# ================================================================
# OPTIONAL EXTERNAL INTEGRATIONS
# ================================================================
# Email service (for notifications)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=

# SMS service (Twilio for notifications)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_PHONE_NUMBER=

# ================================================================
# SECURITY CONFIGURATION
# ================================================================
# CORS origins (comma-separated list of allowed origins)
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# Rate limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000

# ================================================================
# LOGGING CONFIGURATION
# ================================================================
# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# ================================================================
# NOTES
# ================================================================
# 1. Never commit this file with real credentials to version control
# 2. Use AWS Secrets Manager or Parameter Store for production secrets
# 3. Ensure your RDS security group allows connections from your EC2 instance
# 4. Test database connection before starting the application
# 5. Use strong, unique passwords for all services